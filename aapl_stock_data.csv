import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
from tensorflow.keras.callbacks import EarlyStopping
import joblib

# Load CSV file
df = pd.read_csv("aapl_stock_data.csv")

# Print first few rows and dtypes for debugging
print(df.head())
print(df.dtypes)

# Select only numeric columns for model input (adjust if needed)
data = df[['Open', 'High', 'Low', 'Close', 'Volume']]  # include only numerical features

# Normalize the data
scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(data)

# Save the scaler for future use
joblib.dump(scaler, "scaler.save")

# Prepare sequences for LSTM
sequence_length = 60
X, y = [], []

for i in range(sequence_length, len(scaled_data)):
    X.append(scaled_data[i-sequence_length:i])
    y.append(scaled_data[i, 3])  # Predicting 'Close' price

X, y = np.array(X), np.array(y)

# Build LSTM model
model = Sequential()
model.add(LSTM(units=50, return_sequences=True, input_shape=(X.shape[1], X.shape[2])))
model.add(LSTM(units=50))
model.add(Dense(units=1))

model.compile(optimizer='adam', loss='mean_squared_error')

# Train the model
model.fit(X, y, epochs=10, batch_size=32, callbacks=[EarlyStopping(patience=3)])

# Save the trained model
model.save("lstm_model.h5")

print("âœ… Model trained and saved as lstm_model.h5")
